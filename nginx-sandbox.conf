# Some settings from: https://github.com/exratione/non-root-nginx/blob/master/nginx.conf

# You need the full path of the nginx-sandbox.conf
# # Usage: nginx -c /tmp/nginx-sandbox.conf

# This error log will be written regardless of server scope error_log
# definitions, so we have to set this here in the main scope.
#
# Even doing this, Nginx will still try to create the default error file, and
# log a non-fatal error when it fails. After that things will work, however.
# So this is okay,
#  nginx: [alert] could not open error log file: open()
#    "/usr/local/var/log/nginx/error.log" failed (13: Permission denied)

error_log  /tmp/error.log;

# The pidfile will be written to /var/run unless this is set.
pid /tmp/nginx.pid;

worker_processes  1;
events {
  worker_connections 10;
}

http {
  # Set an array of temp and cache file options that will otherwise default to
  # restricted locations accessible only to root.
  client_body_temp_path /tmp/client_body;
  fastcgi_temp_path     /tmp/fastcgi_temp;
  proxy_temp_path       /tmp/proxy_temp;
  scgi_temp_path        /tmp/scgi_temp;
  uwsgi_temp_path       /tmp/uwsgi_temp;

  log_format http '[] (haproxy-backend-used) $server_addr:$server_port '
    '"$scheme" "$request" $status (nginx-upsteam used) $proxy_host:$proxy_port'
    '(mojo-used) "$upstream_addr"';

  log_format https '[$time_local] (haproxy-backend-used) "$server_addr:$server_port" '
    '"$scheme" "$request" $status (nginx-upsteam used) "$proxy_host:$proxy_port" '
    '(mojo-used) "$upstream_addr" (ssl-cipher) "$ssl_cipher" ';

  upstream http_mojo {
      server 127.0.0.1:3000;
      server 127.0.0.1:3001;
      server 127.0.0.1:3002;
  }

  upstream https_mojo {
      server 127.0.0.1:3003;
      server 127.0.0.1:3004;
      server 127.0.0.1:3005;
  }

  server {
    listen 8002;
    access_log /tmp/access.log http;

    location / {
      proxy_pass http://http_mojo;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "http";
    }
  }

  server {
    listen 8003;
    access_log /tmp/access.log https;
    server_name 127.0.0.1;

    ssl on;
    ssl_certificate /tmp/127.0.0.1.crt;
    ssl_certificate_key /tmp/127.0.0.1.key;

    location / {
      proxy_pass https://https_mojo;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "https";
    }
  }
}
